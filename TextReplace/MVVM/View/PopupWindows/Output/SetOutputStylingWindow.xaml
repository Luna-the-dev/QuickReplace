<Window
    x:Class="TextReplace.MVVM.View.PopupWindows.SetOutputStylingWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:TextReplace.MVVM.View"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:viewModel="clr-namespace:TextReplace.MVVM.ViewModel.PopupWindows"
    Title="SetOutputStylingWindow"
    MinWidth="450"
    MinHeight="300"
    AllowsTransparency="True"
    Background="Transparent"
    ResizeMode="NoResize"
    SizeToContent="WidthAndHeight"
    WindowStartupLocation="CenterOwner"
    WindowStyle="None"
    mc:Ignorable="d">

    <Window.DataContext>
        <viewModel:SetOutputStylingViewModel />
    </Window.DataContext>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="25" />
            <RowDefinition />
        </Grid.RowDefinitions>

        <local:TopBorderView x:Name="TopBorder" />

        <Border
            Grid.Row="1"
            Background="{StaticResource BackgroundColor}"
            BorderBrush="{StaticResource BackgroundColorDark}"
            BorderThickness="2,0,2,2">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="163" />
                    <ColumnDefinition Width="163" />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>

                <Grid.RowDefinitions>
                    <RowDefinition MinHeight="30" MaxHeight="40" />
                    <RowDefinition Height="Auto" MinHeight="60" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition MinHeight="40" />
                </Grid.RowDefinitions>

                <TextBlock
                    Name="BodyTextBox"
                    Grid.Row="1"
                    Grid.Column="1"
                    Grid.ColumnSpan="2"
                    Margin="15,0,15,10"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Center"
                    d:Text="Select the styling properties that will be applied to the replacements in the output files.&#x0a;(For Document and Excel files only.)"
                    FontFamily="/Fonts/#Poppins"
                    Foreground="{StaticResource TextLight}"
                    TextAlignment="Center"
                    TextWrapping="Wrap" />

                <Grid
                    Grid.Row="2"
                    Grid.Column="1"
                    Margin="10,10,6,0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="86*" />
                        <ColumnDefinition Width="14*" />
                    </Grid.ColumnDefinitions>

                    <TextBlock
                        Margin="0,0,0,0"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Center"
                        FontFamily="/Fonts/#Poppins"
                        FontSize="13"
                        Foreground="{StaticResource TextLight}"
                        Text="Bold:" />

                    <Viewbox
                        Grid.Column="1"
                        Margin="0,4"
                        HorizontalAlignment="Right">
                        <CheckBox
                            x:Name="boldCheckBox"
                            IsChecked="{Binding Bold}"
                            Style="{StaticResource CustomCheckBox}" />
                    </Viewbox>
                </Grid>

                <Grid
                    Grid.Row="2"
                    Grid.Column="2"
                    Margin="10,10,5,0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="86*" />
                        <ColumnDefinition Width="14*" />
                    </Grid.ColumnDefinitions>

                    <TextBlock
                        Margin="0,0,0,0"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Center"
                        FontFamily="/Fonts/#Poppins"
                        FontSize="13"
                        Foreground="{StaticResource TextLight}"
                        Text="Italics:" />

                    <Viewbox
                        Grid.Column="1"
                        Margin="0,4"
                        HorizontalAlignment="Right">
                        <CheckBox
                            x:Name="italicsCheckBox"
                            IsChecked="{Binding Italics}"
                            Style="{StaticResource CustomCheckBox}" />
                    </Viewbox>
                </Grid>

                <Grid
                    Grid.Row="3"
                    Grid.Column="1"
                    Margin="10,10,5,0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="86*" />
                        <ColumnDefinition Width="14*" />
                    </Grid.ColumnDefinitions>

                    <TextBlock
                        Margin="0,0,0,0"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Center"
                        FontFamily="/Fonts/#Poppins"
                        FontSize="13"
                        Foreground="{StaticResource TextLight}"
                        Text="Underline:" />

                    <Viewbox
                        Grid.Column="1"
                        Margin="0,4"
                        HorizontalAlignment="Right">
                        <CheckBox
                            x:Name="underlineCheckBox"
                            IsChecked="{Binding Underline}"
                            Style="{StaticResource CustomCheckBox}" />
                    </Viewbox>
                </Grid>

                <Grid
                    Grid.Row="3"
                    Grid.Column="2"
                    Margin="10,10,5,0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="86*" />
                        <ColumnDefinition Width="14*" />
                    </Grid.ColumnDefinitions>

                    <TextBlock
                        Margin="0,0,0,0"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Center"
                        FontFamily="/Fonts/#Poppins"
                        FontSize="13"
                        Foreground="{StaticResource TextLight}"
                        Text="Strikethrough:" />

                    <Viewbox
                        Grid.Column="1"
                        Margin="0,4"
                        HorizontalAlignment="Right">
                        <CheckBox
                            x:Name="strikethroughCheckBox"
                            IsChecked="{Binding Strikethrough}"
                            Style="{StaticResource CustomCheckBox}" />
                    </Viewbox>
                </Grid>

                <Grid
                    Grid.Row="4"
                    Grid.Column="1"
                    Margin="10,10,7,0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="86*" />
                        <ColumnDefinition Width="14*" />
                    </Grid.ColumnDefinitions>

                    <TextBlock
                        Margin="0,0,0,0"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Center"
                        FontFamily="/Fonts/#Poppins"
                        FontSize="13"
                        Foreground="{StaticResource TextLight}"
                        Text="Highlight:" />

                    <Border
                        Width="17"
                        Height="17"
                        Margin="0,0,8,3"
                        HorizontalAlignment="Right"
                        d:Visibility="Visible"
                        Background="{DynamicResource HighlightColorBrush}"
                        BorderBrush="{StaticResource TextLight}"
                        BorderThickness="2"
                        CornerRadius="2"
                        Visibility="{Binding IsHighlighted, Converter={StaticResource BooleanToVisibilityConverter}}" />

                    <Button
                        x:Name="highlightButton"
                        Grid.Column="1"
                        Margin="1,1,1,6"
                        HorizontalAlignment="Right"
                        Click="SetHighlightColor_OnClick"
                        Cursor="Hand"
                        Style="{DynamicResource removeButtonHoverEffect}">
                        <Viewbox>
                            <Path
                                Data="M200,840Q167,840 143.5,816.5Q120,793 120,760L120,200Q120,167 143.5,143.5Q167,120 200,120L557,120L477,200L200,200Q200,200 200,200Q200,200 200,200L200,760Q200,760 200,760Q200,760 200,760L760,760Q760,760 760,760Q760,760 760,760L760,482L840,402L840,760Q840,793 816.5,816.5Q793,840 760,840L200,840ZM480,480Q480,480 480,480Q480,480 480,480L480,480Q480,480 480,480Q480,480 480,480L480,480L480,480L480,480L480,480L480,480L480,480Q480,480 480,480Q480,480 480,480ZM360,600L360,430L727,63Q739,51 754,45Q769,39 784,39Q800,39 814.5,45Q829,51 841,63L897,120Q908,132 914,146.5Q920,161 920,176Q920,191 914.5,205.5Q909,220 897,232L530,600L360,600ZM841,176L841,176L785,120L785,120L841,176ZM440,520L496,520L728,288L700,260L671,232L440,463L440,520ZM700,260L671,232L671,232L700,260L728,288L728,288L700,260Z"
                                Fill="{StaticResource TextLight}"
                                Stretch="UniformToFill" />
                        </Viewbox>
                    </Button>
                </Grid>

                <Grid
                    Grid.Row="4"
                    Grid.Column="2"
                    Margin="10,10,7,0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="86*" />
                        <ColumnDefinition Width="14*" />
                    </Grid.ColumnDefinitions>

                    <TextBlock
                        Margin="0,0,0,0"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Center"
                        FontFamily="/Fonts/#Poppins"
                        FontSize="13"
                        Foreground="{StaticResource TextLight}"
                        Text="Text Color:" />

                    <Border
                        Width="17"
                        Height="17"
                        Margin="0,0,8,3"
                        HorizontalAlignment="Right"
                        d:Visibility="Visible"
                        Background="{DynamicResource TextColorBrush}"
                        BorderBrush="{StaticResource TextLight}"
                        BorderThickness="2"
                        CornerRadius="2"
                        Visibility="{Binding IsTextColored, Converter={StaticResource BooleanToVisibilityConverter}}" />

                    <Button
                        x:Name="textColorButton"
                        Grid.Column="1"
                        Margin="1,1,1,6"
                        HorizontalAlignment="Right"
                        Click="SetTextColor_OnClick"
                        Cursor="Hand"
                        Style="{DynamicResource removeButtonHoverEffect}">
                        <Viewbox>
                            <Path
                                Data="M200,840Q167,840 143.5,816.5Q120,793 120,760L120,200Q120,167 143.5,143.5Q167,120 200,120L557,120L477,200L200,200Q200,200 200,200Q200,200 200,200L200,760Q200,760 200,760Q200,760 200,760L760,760Q760,760 760,760Q760,760 760,760L760,482L840,402L840,760Q840,793 816.5,816.5Q793,840 760,840L200,840ZM480,480Q480,480 480,480Q480,480 480,480L480,480Q480,480 480,480Q480,480 480,480L480,480L480,480L480,480L480,480L480,480L480,480Q480,480 480,480Q480,480 480,480ZM360,600L360,430L727,63Q739,51 754,45Q769,39 784,39Q800,39 814.5,45Q829,51 841,63L897,120Q908,132 914,146.5Q920,161 920,176Q920,191 914.5,205.5Q909,220 897,232L530,600L360,600ZM841,176L841,176L785,120L785,120L841,176ZM440,520L496,520L728,288L700,260L671,232L440,463L440,520ZM700,260L671,232L671,232L700,260L728,288L728,288L700,260Z"
                                Fill="{StaticResource TextLight}"
                                Stretch="UniformToFill" />
                        </Viewbox>
                    </Button>
                </Grid>

                <Grid
                    Grid.Row="5"
                    Grid.Column="1"
                    Grid.ColumnSpan="2"
                    Height="30"
                    Margin="0,10,0,0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <ToggleButton
                        Name="BtnOk"
                        Grid.Column="0"
                        Margin="5,0"
                        Padding="8"
                        Click="BtnOk_Click"
                        Content="Save"
                        Style="{StaticResource InputWindowConfirmButtonTheme}" />
                    <ToggleButton
                        Name="BtnCancel"
                        Grid.Column="1"
                        Margin="5,0"
                        Padding="8"
                        Click="BtnCancel_Click"
                        Content="Cancel"
                        Style="{StaticResource InputWindowCancelButtonTheme}" />
                </Grid>
            </Grid>
        </Border>
    </Grid>

    <Window.Resources>
        <SolidColorBrush x:Key="HighlightColorBrush" Color="{Binding HighlightColor}" />
        <SolidColorBrush x:Key="TextColorBrush" Color="{Binding TextColor}" />

        <Style x:Key="removeButtonHoverEffect" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid Background="{TemplateBinding Background}">
                            <ContentPresenter />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>

</Window>
